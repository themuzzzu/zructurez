
/* Add language transition effects */
body.lang-transition {
  transition: all 0.5s ease;
  animation: lang-fade 0.8s ease;
  opacity: 0.95;
}

@keyframes lang-fade {
  0% { opacity: 0.7; transform: scale(0.99); }
  50% { opacity: 0.9; transform: scale(0.995); }
  100% { opacity: 1; transform: scale(1); }
}

/* Style for language indicator */
.language-indicator {
  position: fixed;
  top: 80px;
  right: 20px;
  padding: 8px 16px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: 4px;
  z-index: 9999;
  transition: opacity 0.5s, transform 0.3s;
  box-shadow: 0 3px 12px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(3px);
  transform: translateY(0);
  font-weight: 500;
  animation: indicator-slide-in 0.3s ease;
}

@keyframes indicator-slide-in {
  0% { transform: translateY(-20px); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
}

.language-indicator.hide {
  opacity: 0;
  transform: translateY(-20px);
}

/* Add data-language attribute styles */
html[data-language="hindi"] {
  --font-family: 'Arial', 'Noto Sans Devanagari', sans-serif;
}

html[data-language="telugu"] {
  --font-family: 'Arial', 'Noto Sans Telugu', sans-serif;
}

html[data-language="tamil"] {
  --font-family: 'Arial', 'Noto Sans Tamil', sans-serif;
}

html[data-language="kannada"] {
  --font-family: 'Arial', 'Noto Sans Kannada', sans-serif;
}

html[data-language="malayalam"] {
  --font-family: 'Arial', 'Noto Sans Malayalam', sans-serif;
}

html[data-language="urdu"] {
  --font-family: 'Arial', 'Noto Sans Urdu', sans-serif;
}

/* Apply the custom font family when a data-language is set */
html[data-language]:not([data-language="english"]) body {
  font-family: var(--font-family);
}

/* Apply fluid transition to elements being translated */
[data-translated="true"] {
  transition: transform 0.3s ease, opacity 0.3s ease;
}

/* Right-to-left support for Urdu */
html[data-language="urdu"] {
  direction: rtl;
}

html[data-language="urdu"] .rtl-support {
  direction: rtl;
  text-align: right;
}

/* Don't apply RTL to specific UI components that should remain LTR */
html[data-language="urdu"] [dir="ltr"],
html[data-language="urdu"] .no-rtl {
  direction: ltr;
}

/* Specific styling for language-specific UI elements */
[data-translated="true"] {
  position: relative;
}

/* Fix for mobile navigation with translated text */
@media (max-width: 768px) {
  .fixed.bottom-0 button span {
    font-size: 9px;
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
  }
  
  /* Fix for search bar on small screens */
  .search-bar-container input {
    font-size: 14px;
  }
  
  /* Ensure language indicator doesn't block content */
  .language-indicator {
    top: auto;
    bottom: 80px;
    font-size: 12px;
    padding: 4px 8px;
  }
}

/* Ensure bottom nav has enough space for translated text */
.bottom-nav-item {
  width: auto;
  min-width: 65px;
}

/* Prevent layout shifts during translation */
[data-translate], [data-translate-dynamic] {
  min-height: 1em;
  transition: min-height 0.3s ease;
}

/* Fix for search input in RTL languages */
html[data-language="urdu"] .search-bar-container input[dir="rtl"] {
  text-align: right;
}

html[data-language="urdu"] .pl-10 {
  padding-left: 0 !important;
  padding-right: 2.5rem !important;
}

html[data-language="urdu"] .relative .left-3 {
  left: auto;
  right: 0.75rem;
}

/* Override RTL for specific UI components */
html[data-language="urdu"] .fixed.bottom-0 {
  direction: ltr;
}

/* Fix for bottom navigation in mobile RTL */
html[data-language="urdu"] .fixed.bottom-0 [dir="rtl"] {
  direction: rtl;
}

/* Fix for inputs with icons in RTL mode */
html[data-language="urdu"] .search-input-container {
  direction: rtl;
}

html[data-language="urdu"] .search-input-container input {
  padding-right: 2.5rem !important;
  padding-left: 1rem !important;
}

html[data-language="urdu"] .search-input-container .search-icon {
  left: auto;
  right: 0.75rem;
}

/* Smooth transition for language changes */
.translate-transition {
  transition: all 0.3s ease-in-out;
}

/* Fix for UI components during language transition */
body.lang-transition .search-bar-container,
body.lang-transition button,
body.lang-transition a,
body.lang-transition input,
body.lang-transition .card {
  transition: transform 0.3s ease, opacity 0.3s ease;
}

/* Add loading state for dynamic translations */
[data-translating="true"] {
  position: relative;
}

[data-translating="true"]::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(to right, transparent, var(--primary-500), transparent);
  animation: translating-progress 1.5s infinite ease-in-out;
}

@keyframes translating-progress {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Helper classes for translation status */
.translation-pending {
  opacity: 0.7;
}

.translation-complete {
  opacity: 1;
  transition: opacity 0.3s ease;
}
